[Main]

# The Server Density account where this device is used.
# Only the account name, e.g. abc not abc.serverdensity.io
sd_account:

# The Server Density agent key to associate your Agent's data with a device
# on your account.
agent_key:

# If you need a proxy to connect to the Internet, provide the settings here
# proxy_host: my-proxy.com
# proxy_port: 3128
# proxy_user: user
# proxy_password: password
# To be used with some proxys that return a 302 which make curl switch from POST to GET
# See http://stackoverflow.com/questions/8156073/curl-violate-rfc-2616-10-3-2-and-switch-from-post-to-get
# proxy_forbid_method_switch: no

# Force the hostname to whatever you want.
#hostname: mymachine.mydomain

#
# Plugins
#
# Leave blank to ignore.
# See https://support.serverdensity.com/hc/en-us/articles/213074438-Information-about-Custom-Plugins
#
plugin_directory:

# ========================================================================== #
# Logging
# See https://support.serverdensity.com/hc/en-us/articles/213093038-Log-levels-agent-debug-mode
# ========================================================================== #

# log_level: INFO

# collector_log_file: /var/log/sd-agent/collector.log
# forwarder_log_file: /var/log/sd-agent/forwarder.log

# if syslog is enabled but a host and port are not set, a local domain socket
# connection will be attempted
#
# log_to_syslog: yes
# syslog_host:
# syslog_port:


# ========================================================================== #
# SdStats
# See https://support.serverdensity.com/hc/en-us/articles/115014823747
# ========================================================================== #
# If you don't want to enable the SdStatsd server, set this option to no
# use_sdstatsd: yes

#  Make sure your client is sending to the same port.
# sdstatsd_port: 8125

# you may want all statsd metrics coming from this host to be namespaced
# in some way; if so, configure your namespace here. a metric that looks
# like `metric.name` will instead become `namespace.metric.name`
# statsd_metric_namespace:

# By default, dogstatsd supports only plain ASCII packets. However, most
# (dog)statsd client support UTF8 by encoding packets before sending them
# this option enables UTF8 decoding in case you need it.
# However, it comes with a performance overhead of ~10% in the dogstatsd
# server. This will be taken care of properly in the new gen agent core.
# utf8_decoding: false

# The number of bytes allocated to the statsd socket receive buffer. By default,
# this value is set to the value of `/proc/sys/net/core/rmem_default`. If you
# need to increase the size of this buffer but keep the OS default value the
# same, you can set dogstats's receive buffer size here. The maximum allowed
# value is the value of `/proc/sys/net/core/rmem_max`.
# statsd_so_rcvbuf: